/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2020 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2020 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */

import { SpinBox, Button, CheckBox, Slider, GroupBox, StandardListView } from "sixtyfps_widgets.60";
import { Label, Page, Preview } from "common.60";

struct InkLevel := {
    color: color,
    level: float,
}

global DemoPalette := {
    // Color of the home/settings/ink buttons on the left side bar
    property <color> active_page_icon_color: #122F7B;
    property <color> inactive_page_icon_color: #BDC0D1;
}

global GlobalSettings := {
    property <bool> night_mode;

    property <logical_length> sidebar_icon_width: 57px;
}

SideBarIcon := Rectangle {
    property <bool> active;
    callback activate;

    GridLayout {
        padding: 15px;
        @children
    }

    TouchArea {
        clicked => { root.activate(); }
    }
}

MainWindow := Window {
    callback quit();

    width: 800px;
    height: 600px;
    title: "SixtyFPS printer demo";
    background: #0E133F;

    /// Note that this property is overwriten in the .cpp and .rs code.
    /// The data is only in this file so it looks good in the viewer
    property <[InkLevel]> ink_levels: [
                {color: #0ff, level: 60%},
                {color: #ff0, level: 80%},
                {color: #f0f, level: 70%},
                {color: #000, level: 30%},
            ];

    property<int> active_page: 0;

    // Need this rectangle to prevent the layout from becoming the window's main layout
    sidebar := Rectangle {
        width: 10%;

        VerticalLayout {
            padding-top: 50px;
            padding-bottom: 50px;
            padding-left: 20px;
            spacing: 30px;

            for page_info[idx] in [
                { icon: @image-url("images/home.svg") },
                { icon: @image-url("images/settings.svg") },
                { icon: @image-url("images/ink.svg") },
            ] : SideBarIcon {
                width: GlobalSettings.sidebar_icon_width;
                height: self.width;

                icon := Image {
                    //colorize: active ? DemoPalette.active_page_icon_color : DemoPalette.inactive_page_icon_color;
                    source: page_info.icon;
                }
            }

            Rectangle {
                border-width: 1px;
                border-color: #6284FF;
                height: 2px;
                width: GlobalSettings.sidebar_icon_width;
            }

            SideBarIcon {
                width: GlobalSettings.sidebar_icon_width;
                height: self.width;
                Path {
                    commands: "M0.00287444 13.4812C-0.0696142 16.985 1.23143 20.3752 3.62219 22.9088C6.01311 25.4435 9.2988 26.9138 12.7597 27C15.0419 26.9734 17.274 26.3255 19.2238 25.1246C21.1735 23.9225 22.7669 22.2116 23.8369 20.1704C24.0706 19.7377 24.0518 19.21 23.7894 18.7949C23.5256 18.3798 23.0607 18.1432 22.5745 18.1774L22.4283 18.1888C22.2533 18.2027 22.0771 18.2153 21.8946 18.2153C19.1413 18.1293 16.5341 16.9436 14.6419 14.9149C12.7509 12.8877 11.7311 10.1846 11.8036 7.39569C11.8036 5.51019 12.2685 3.65372 13.1584 1.99736C13.3908 1.56459 13.3733 1.03817 13.1109 0.623091C12.8484 0.208013 12.3835 -0.029865 11.8986 0.0030161C8.60399 0.319374 5.54811 1.88346 3.34235 4.38284C1.13768 6.8808 -0.0558723 10.1304 0.00267916 13.4813L0.00287444 13.4812ZM9.79281 3.15264C9.36161 4.52438 9.14164 5.95556 9.14164 7.39575C9.08915 10.5986 10.1753 13.7128 12.2024 16.1716C14.2296 18.6316 17.0619 20.2702 20.1824 20.7905C18.3277 22.9949 15.6192 24.2743 12.7598 24.2995C10.0064 24.2148 7.3993 23.0278 5.50838 21.0004C3.61614 18.9732 2.59629 16.2691 2.66879 13.4812C2.63755 11.2211 3.3087 9.00774 4.58726 7.15538C5.86458 5.30151 7.68557 3.90194 9.79291 3.15296L9.79281 3.15264Z";
                    // FIXME: Crashes interpreter: fill: GlobalSettings.night_mode ? #F1FF98 : #BDC0D1;
                    fill: #BDC0D1;
                    // FIXME: Crashes interpreter: fill-rule: GlobalSettings.night_mode ? evenodd : nonzero;
                }
                activate => {
                    GlobalSettings.night_mode = !GlobalSettings.night_mode;
                }
            }
        }
    }
}

