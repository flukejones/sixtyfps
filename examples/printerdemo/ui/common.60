/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2020 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2020 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */

export global DemoPalette := {
    // Color of the home/settings/ink buttons on the left side bar
    property <color> active_page_icon_color: night_mode ? #6284FF : #122F7B;
    property <color> inactive_page_icon_color: #BDC0D1;

    property <color> main_background: #0E133F;
    property <color> neutral_box: #BDC0D1; // Black / Tertiary

    property <color> page_background_color: night_mode ? #122F7B : white;

    property <color> text_foreground_color: night_mode ? #F4F6FF : black;
    property <color> secondary_foreground_color: #6C6E7A; // FIXME: night mode

    property <color> printer_action_background_color: night_mode ? main_background : white;
    property <color> printer_queue_item_background_color: page_background_color;

    property <color> status_label_text_color: night_mode ? #F1FF98 : #6284FF;

    // Color used for the border / outline of items that can be clicked on, such as the
    // "Print"/"Scan" buttons, the printer queue items (for expansion) or controls such
    // as the combo box or spin box.
    property <color> control_outline_color: #FFBF63;
    property <color> control_secoundary: #6284FF;
    property <color> control_foreground: #122F7B;

    property <color> primary_push_button_color: #6284FF;
    property <color> secondary_push_button_color: #FFBF63; // red in the "green" theme
    property <color> push_button_text_color: white;

    property <bool> night_mode: false;
}

export Page := Rectangle {
    property<string> header <=> h.text;
    background: DemoPalette.page_background_color;
    property <bool> has_back_button: false;
    callback back;

    TouchArea {} // protect underneath controls

    HorizontalLayout {
        padding: 0;
        spacing: 16px;
        alignment: start;
        if (has_back_button) : Text {
            font-weight: 900;
            font-size: 22px;
            text: "< ";
            color: DemoPalette.control_secoundary;
            TouchArea { clicked => { back() } }
        }

        h := Text {
            font-weight: 900;
            font-size: 22px;
            color: DemoPalette.text_foreground_color;
        }
    }
}

export struct PrinterQueueItem := {
    status: string,
    title: string,
    owner: string,
    pages: int,
    size: string, // number instead and format in .60?
    submission_date: string
}

export Label := Text {
    color: DemoPalette.text_foreground_color;
    font-size: 15.6px;
    vertical-alignment: center;
    font-weight: 700;
}

SpinBoxButton := Rectangle {
    callback clicked;
    property<string> text;
    border-radius: 3px;
    border-width: 2px;
    border-color: DemoPalette.control_outline_color;
    width: height;
    touch := TouchArea {
        clicked => {
            root.clicked();
        }
    }
    Text {
        height: 100%;
        width: 100%;
        vertical-alignment: center;
        horizontal-alignment: center;
        text <=> root.text;
        font-size: 32px;
        color: DemoPalette.control_secoundary;
    }
}

export SpinBox := Rectangle {
    property <bool> checked;
    property <int> value;
    property <int> minimum;
    property <int> maximum: 100;

    HorizontalLayout {
        spacing: 12px;
        padding: 0;
        height: 32px;
        SpinBoxButton {
            text: "-";
            clicked => {
                if (root.value > root.minimum) {
                    root.value -= 1;
                }
            }
        }

        Rectangle {
            border-radius: 3px;
            border-width: 2px;
            border-color: DemoPalette.control_outline_color;
            Text {
                width: 100%;
                height: 100%;
                vertical-alignment: center;
                horizontal-alignment: center;
                text: value;
                font-size: 15.6px;
                color: DemoPalette.control_foreground;
            }
        }

        SpinBoxButton {
            text: "+";
            clicked => {
                if (root.value < root.maximum) {
                    root.value += 1;
                }
            }
        }
    }
}

export ComboBox := Rectangle {
    property<string> value;
    border-radius: 3px;
    border-width: 2px;
    border-color: DemoPalette.control_outline_color;
    height: 32px;
    HorizontalLayout {
        padding-left: 12px;
        Text {
            horizontal-stretch: 1;
            vertical-alignment: center;
            horizontal-alignment: left;
            text <=> root.value;
            font-size: 15.6px;
            color: DemoPalette.control_foreground;
        }
        Text {
            horizontal-stretch: 0;
            vertical-alignment: center;
            horizontal-alignment: center;
            text: "â–¼ ";
            font-size: 22px;
            color: DemoPalette.control_secoundary;
        }
    }
}

export PushButton := Rectangle {
    property <string> text <=> label.text;
    property <resource> icon <=> img.source;
    property <bool> primary: true;

    border-radius: 13.5px;
    background: primary ? DemoPalette.primary_push_button_color : DemoPalette.secondary_push_button_color;

    height: 23px; // line-height in the design

    HorizontalLayout {
        img := Image {
            horizontal-stretch: 0;
            colorize: DemoPalette.push_button_text_color;
        }

        label := Text {
            font-size: 15.6px;
            font-weight: 900;
            color: DemoPalette.push_button_text_color;
        }
    }
}